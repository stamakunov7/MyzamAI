#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–≥–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Å—Ç–∞—Ç—å—è–º–∏
"""

import asyncio
import sys
import os

# Add parent directory to path for imports
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '.'))

from bot.main import LegalBotOrchestrator


async def quick_test():
    """
    –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–≥–∞
    """
    print("üîç Quick Test: Article 379 vs 380 Bug Fix")
    print("="*50)
    
    # Get paths
    script_dir = os.path.dirname(os.path.abspath(__file__))
    index_dir = os.path.join(script_dir, 'faiss_index')
    
    # Check if FAISS index exists
    if not os.path.exists(os.path.join(index_dir, 'faiss_index.bin')):
        print("‚ùå FAISS index not found!")
        return
    
    # Initialize orchestrator
    print("üöÄ Initializing orchestrator...")
    orchestrator = LegalBotOrchestrator(index_dir)
    
    # Test the problematic articles
    test_articles = [379, 380, 381]
    
    for article_num in test_articles:
        print(f"\nüîç Testing Article {article_num}:")
        
        try:
            article_text = orchestrator.get_article_by_number(article_num)
            
            if article_text is None:
                print(f"   ‚ùå Article {article_num}: NOT FOUND")
                continue
            
            # Check if it's the correct article
            if article_text.strip().startswith(f"–°—Ç–∞—Ç—å—è {article_num}"):
                print(f"   ‚úÖ Article {article_num}: CORRECT")
                print(f"   üìù Preview: {article_text[:150]}...")
            else:
                # Extract actual article number
                import re
                match = re.search(r'–°—Ç–∞—Ç—å—è (\d+)', article_text)
                actual_article = match.group(1) if match else "Unknown"
                print(f"   ‚ùå Article {article_num}: WRONG! Got Article {actual_article}")
                print(f"   üìù Preview: {article_text[:150]}...")
        
        except Exception as e:
            print(f"   üö® Article {article_num}: ERROR - {str(e)}")
    
    print("\n" + "="*50)
    print("‚úÖ Quick test completed!")


if __name__ == "__main__":
    asyncio.run(quick_test())
